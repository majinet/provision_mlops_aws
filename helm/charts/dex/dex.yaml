ingress:
  enabled: true
  className: nginx
  annotations:
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: acme-staging
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
  hosts:
    - host: dex.platform.whatautomatech.com
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    - secretName: dex-tls
      hosts:
        - dex.platform.whatautomatech.com

config:
  storage:
    type: kubernetes
    config:
      inCluster: true

  oauth2:
    responseTypes: ["code", "token", "id_token"]
    skipApprovalScreen: true

  connectors:
    - type: github
      id: github
      name: GitHub
      config:
        issuer: https://dex.platform.whatautomatech.com
        clientID: "{{ .Env.GITHUB_CLIENT_ID }}"
        clientSecret: "{{ .Env.GITHUB_CLIENT_SECRET }}"
        redirectURI: https://dex.platform.whatautomatech.com/callback
        orgs:
          - name: Devops-Blocks-Builder
            teams:
              - mlops

  expiry:
    idTokens: 60m
    refreshTokens:
      absoluteLifetime: 24h
      reuseInterval: 30m
      validIfNotUsedFor: 15m

  staticClients:
    - id: eks-client-1
      secret: "password"
      name: "eks-cluster"
      redirectURIs:
        - https://login.platform.whatautomatech.com/callback
# Note: this will inject the environment variables directly to the pods.# In a production environment you should mount these keys from a secret using envFrom.# See https://artifacthub.io/packages/helm/dex/dex#values
env:
  GITHUB_CLIENT_ID: ${OIDC_GITHUB_CLIENT_ID}
  GITHUB_CLIENT_SECRET: ${OIDC_GITHUB_CLIENT_SECRET}