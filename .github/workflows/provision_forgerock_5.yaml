name: Step 5.5 - Provisioning ForgeRock

on:
  workflow_dispatch:
    inputs:
      region:
        description: 'AWS Region'
        required: true
        default: 'us-east-1'
      #keypair:
      #  description: 'SSH Key Pair'
      #  required: true

env:
  AWS_REGION : ${{ github.event.inputs.region}} #Change to reflect your Region
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  CLUSTER_NAME: eks-cluster

# Permission can be added at job level or workflow level
permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout

jobs:
  kafka_aws:
    name: Provisioning ForgeRock
    runs-on: ubuntu-20.04
    outputs:
      env-name: ${{ steps.env-name.outputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: main
      - name: Checkout ForgeRock
        uses: actions/checkout@v3
        with:
          repository: ForgeRock/forgeops
          ref: 2021.05.12-7.1.0
          path: forgeops
      - name: Configure AWS credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{secrets.AWS_ACCOUNT_ID}}:role/KubeAdmin
          role-session-name: deploykubeflow
          aws-region: ${{ github.event.inputs.region}}
      - name: install envsubst
        id: install-envsubst
        run: |
          curl -L https://github.com/a8m/envsubst/releases/download/v1.2.0/envsubst-`uname -s`-`uname -m` -o envsubst
          chmod +x envsubst
          sudo mv envsubst /usr/local/bin
      - name: install eksctl
        id: install-eksctl
        run: |
          # for ARM systems, set ARCH to: `arm64`, `armv6` or `armv7`
          ARCH=amd64
          PLATFORM=$(uname -s)_$ARCH

          curl -sLO "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$PLATFORM.tar.gz"
          tar -xzf eksctl_$PLATFORM.tar.gz -C /tmp && rm eksctl_$PLATFORM.tar.gz
          sudo mv /tmp/eksctl /usr/local/bin
      - name: install kubectl
        id: install-kubectl
        run: |
          curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.27.1/2023-04-19/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$HOME/bin:$PATH
          kubectl version --short --client
      - name: install yq
        id: install-yq
        run: |
          sudo add-apt-repository ppa:rmescandon/yq
          sudo apt update -y
          sudo apt install yq -y
      - name: install kubectx and kubens
        run: |
          wget http://ftp.de.debian.org/debian/pool/main/k/kubectx/kubectx_0.9.3-1_all.deb
          sudo dpkg -i kubectx_0.9.3-1_all.deb
      - name: install skaffold
        run: |
          curl -Lo skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64 && \
          sudo install skaffold /usr/local/bin/
      - name: Health Check Cluster
        id: health-check-eks
        run: |
          aws eks update-kubeconfig --name ${{env.CLUSTER_NAME}} --region ${{env.AWS_REGION}}
          kubectl config get-contexts
      - name: create namespace (forgerock)
        run: |
          kubectl create ns "forgerock"
        continue-on-error: true
      - name: switch namespace
        run: |
          kubens forgerock
      - name: Environment Setup (deploy Secret Agent Operator)
        run: |
          kubectl apply -f https://github.com/ForgeRock/secret-agent/releases/latest/download/secret-agent.yaml
      - name: Environment Setup (Prepare to push Docker images)
        run: |
          aws ecr get-login-password | docker login --username AWS  \
           --password-stdin ${{env.AWS_ACCOUNT_ID}}.dkr.ecr.${{env.AWS_REGION}}.amazonaws.com
          
          skaffold config set default-repo ${{env.AWS_ACCOUNT_ID}}.dkr.ecr.${{env.AWS_REGION}}.amazonaws.com/forgeops
      - name: deploy CDM
        run: |
          cd forgeops/bin
          ./config.sh init --profile cdk
      - name: create secrets
        run: |
          pwd
          cd forgeops
          # Deploy the secrets
          cd kustomize/base/secrets 
          kubectl apply --filename secret_agent_config.yaml
      - name: deploy ForgeRock
        run: |
          skaffold run --profile small