name: Step 6.0 - Provisioning Kubeflow

on:
  workflow_dispatch:
    inputs:
      region:
        description: 'AWS Region'
        required: true
        default: 'us-east-1'
      #keypair:
      #  description: 'SSH Key Pair'
      #  required: true

env:
  AWS_REGION : ${{ github.event.inputs.region}} #Change to reflect your Region
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  CLUSTER_NAME: eks-cluster

# Permission can be added at job level or workflow level
permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout

jobs:
  eks_aws:
    name: Provisioning AWS EKS
    runs-on: ubuntu-20.04
    outputs:
      env-name: ${{ steps.env-name.outputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: main
      - name: Checkout awslabs kubeflow-manifests
        uses: actions/checkout@v3
        with:
          repository: awslabs/kubeflow-manifests
          ref: v1.7.0-aws-b1.0.2
          path: kubeflow-manifests
      - name: Checkout kubeflow
        uses: actions/checkout@v3
        with:
          repository: kubeflow/manifests
          ref: v1.7.0
          path: upstream
      - name: Configure AWS credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{secrets.AWS_ACCOUNT_ID}}:role/DeployKubeflow
          role-session-name: deploykubeflow
          aws-region: ${{ github.event.inputs.region}}
      - name: install envsubst
        id: install-envsubst
        run: |
          curl -L https://github.com/a8m/envsubst/releases/download/v1.2.0/envsubst-`uname -s`-`uname -m` -o envsubst
          chmod +x envsubst
          sudo mv envsubst /usr/local/bin
      - name: health check eks
        run: |
          aws eks update-kubeconfig --region us-east-1 --name eks-cluster
      - name: create crds
        id: create-crds
        run: |
          kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/secrets-store-csi-driver/v1.3.2/deploy/rbac-secretproviderclass.yaml
          kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/secrets-store-csi-driver/v1.3.2/deploy/csidriver.yaml
          kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/secrets-store-csi-driver/v1.3.2/deploy/secrets-store.csi.x-k8s.io_secretproviderclasses.yaml
          kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/secrets-store-csi-driver/v1.3.2/deploy/secrets-store.csi.x-k8s.io_secretproviderclasspodstatuses.yaml
          kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/secrets-store-csi-driver/v1.3.2/deploy/secrets-store-csi-driver.yaml
          kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/secrets-store-csi-driver/v1.3.2/deploy/rbac-secretprovidersyncing.yaml
          kubectl apply -f https://raw.githubusercontent.com/aws/secrets-store-csi-driver-provider-aws/main/deployment/aws-provider-installer.yaml
      - name: install Kubeflow
        run: |
          # Clone repository. Support ubuntu 18.04 only
          cp -fr upstream kubeflow-manifests/
          cp main/config/kubeflow-manifests/awsconfigs/apps/pipeline/rds/params.env kubeflow-manifests/awsconfigs/apps/pipeline/rds/params.env
          cat main/config/kubeflow-manifests/awsconfigs/apps/pipeline/s3/params.env | envsubst > kubeflow-manifests/awsconfigs/apps/pipeline/s3/params.env
          cat main/config/kubeflow-manifests/awsconfigs/common/ack-sagemaker-controller/params.env | envsubst > kubeflow-manifests/awsconfigs/common/ack-sagemaker-controller/params.env
          cp main/config/kubeflow-manifests/awsconfigs/common/aws-alb-ingress-controller/base/params.env kubeflow-manifests/awsconfigs/common/aws-alb-ingress-controller/base/params.env
          cp main/config/kubeflow-manifests/awsconfigs/common/aws-authservice/base/params.env kubeflow-manifests/awsconfigs/common/aws-authservice/base/params.env
          cp main/config/kubeflow-manifests/awsconfigs/common/istio-ingress/overlays/cognito/params.env kubeflow-manifests/awsconfigs/common/istio-ingress/overlays/cognito/params.env
          cat main/config/kubeflow-manifests/awsconfigs/common/istio-ingress/overlays/https/params.env | envsubst > kubeflow-manifests/awsconfigs/common/istio-ingress/overlays/https/params.env
          cat main/config/kubeflow-manifests/tests/e2e/utils/ack_sm_controller_bootstrap/config.yaml | envsubst > kubeflow-manifests/tests/e2e/utils/ack_sm_controller_bootstrap/config.yaml
          cat main/config/kubeflow-manifests/tests/e2e/utils/cognito_bootstrap/config.yaml | envsubst > kubeflow-manifests/tests/e2e/utils/cognito_bootstrap/config.yaml
          cp main/config/kubeflow-manifests/upstream/common/dex/base/config-map.yaml kubeflow-manifests/upstream/common/dex/base/config-map.yaml
          
          cd kubeflow-manifests
          
          #      export KUBEFLOW_RELEASE_VERSION=v1.7.0
          #      export AWS_RELEASE_VERSION=v1.7.0-aws-b1.0.2
          #      git clone https://github.com/awslabs/kubeflow-manifests.git && cd kubeflow-manifests
          #      git checkout ${AWS_RELEASE_VERSION}
          #      git clone --branch ${KUBEFLOW_RELEASE_VERSION} https://github.com/kubeflow/manifests.git upstream
          #
          #      # Install necessary tools
          #      #sudo apt install make -q -y
          #      #sudo apt install unzip -q -y
          #
          #      #sudo add-apt-repository ppa:deadsnakes/ppa -y
          #      #sudo apt install -q python3.8-pip -y
          #
          #      #sudo apt-get install python3.8-distutils -y
          #
          make install-tools
          #
          alias python=python3.8
          #
          #      aws configure --profile kubeflow set aws_access_key_id ${{ secrets.IAC_EKS_ACCESS_KEY }}
          #      aws configure --profile kubeflow set aws_secret_access_key ${{ secrets.IAC_EKS_SECRET_KEY }}
          #      aws configure --profile kubeflow set default.region us-east-1
          #
          #      export AWS_PROFILE=kubeflow
          export CLUSTER_NAME=eks-cluster
          export CLUSTER_REGION=us-east-1
          #
          #      export MLMD_DB=metadata_db
          #     printf '
          #     dbHost='$DB_HOST'
          #     mlmdDb='$MLMD_DB'
          #      ' > awsconfigs/apps/pipeline/rds/params.env
          #
          #      printf '
          #      bucketName='$S3_BUCKET' #ack-kubeflow-bucket-${AWS_ACCOUNT_ID}
          #      minioServiceHost='$MINIO_SERVICE_HOST' #s3.amazonaws.com
          #      minioServiceRegion='$CLUSTER_REGION'
          #      ' > awsconfigs/apps/pipeline/s3/params.env
          #
          export PIPELINE_S3_CREDENTIAL_OPTION=static
          #
          #      cd tests/e2e
          #      PYTHONPATH=.. python utils/cognito_bootstrap/cognito_pre_deployment.py
          #      cd -
          #
          # alb installed by default using this installation option
          make deploy-kubeflow INSTALLATION_OPTION=kustomize DEPLOYMENT_OPTION=cognito-rds-s3 PIPELINE_S3_CREDENTIAL_OPTION=$PIPELINE_S3_CREDENTIAL_OPTION
          #
          #      # kubectl get ingress -n istio-system
          #      # Substitute the ALB address under kubeflow.alb.dns in tests/e2e/utils/cognito_bootstrap/config.yaml. The kubeflow section of the config file will look like:
          #
          #      # cd tests/e2e
          #      # PYTHONPATH=.. python utils/cognito_bootstrap/cognito_post_deployment.py
          #      # cd -
          #
      - name: Create user profile in Kubeflow
        run: |
          cat main/config/kubeflow/profile-testenv.yaml | envsubst  > profile-testenv.yaml
          kubectl apply -f profile-testenv.yaml
          kubectl apply -f main/config/eks/clusterrolebinding/user-example-com-cluster-role-binding-pipeline.yaml
      - name: setup alb for istio-ingress-api (KServe)
        run: |
          cp config/kubeflow-manifests/awsconfigs/common/istio-ingress/overlays/api/params.env kubeflow-manifests/awsconfigs/common/istio-ingress/overlays/api/params.env
          cd kubeflow-manifests
          kustomize build awsconfigs/common/istio-ingress/overlays/api | kubectl apply -f -
          kubectl apply -f config/istio/AuthorizationPolicy/allow-predictor.yaml
          kubectl apply -f config/istio/AuthorizationPolicy/allow-transformer.yaml
          
          # replace _example by "platform.whatautomatech.com"
          # kubectl edit configmap config-domain -n knative-serving
