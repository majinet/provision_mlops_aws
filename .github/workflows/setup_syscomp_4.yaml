name: Step 4.0 - Provisioning system components

on:
  workflow_dispatch:
    inputs:
      region:
        description: 'AWS Region'
        required: true
        default: 'us-east-1'
      #keypair:
      #  description: 'SSH Key Pair'
      #  required: true

env:
  AWS_REGION : ${{ github.event.inputs.region}} #Change to reflect your Region
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  CLUSTER_NAME: eks-cluster

# Permission can be added at job level or workflow level
permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout

jobs:
  eks_aws:
    name: Provisioning system components
    runs-on: ubuntu-20.04
    outputs:
      env-name: ${{ steps.env-name.outputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: main
      - name: Checkout awslabs kubeflow-manifests
        uses: actions/checkout@v3
        with:
          repository: awslabs/kubeflow-manifests
          ref: v1.7.0-aws-b1.0.2
          path: kubeflow-manifests
      - name: Checkout kubeflow
        uses: actions/checkout@v3
        with:
          repository: kubeflow/manifests
          ref: v1.7.0
          path: upstream
      - name: Checkout ForgeRock
        uses: actions/checkout@v3
        with:
          repository: ForgeRock/forgeops
          ref: release/7.3-20230706
          path: forgeops
      - name: Configure AWS credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{secrets.AWS_ACCOUNT_ID}}:role/KubeAdmin
          role-session-name: deploykubeflow
          aws-region: ${{ github.event.inputs.region}}
      - name: install envsubst
        id: install-envsubst
        run: |
          curl -L https://github.com/a8m/envsubst/releases/download/v1.2.0/envsubst-`uname -s`-`uname -m` -o envsubst
          chmod +x envsubst
          sudo mv envsubst /usr/local/bin
      - name: install helm
        run: |
          curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
          sudo apt-get install apt-transport-https --yes
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
          sudo apt-get update
          sudo apt-get install helm
      - name: health check eks
        run: |
          aws eks update-kubeconfig --region us-east-1 --name eks-cluster
      - name: install cert-manager
        run: |
          kustomize build upstream/common/cert-manager/cert-manager/base | kubectl apply -f -
      - name: deploy AWS Secret Manager
        run: |
          helm repo add secrets-store-csi-driver https://kubernetes-sigs.github.io/secrets-store-csi-driver/charts
          helm install -n kube-system csi-secrets-store secrets-store-csi-driver/secrets-store-csi-driver
          
          #kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/secrets-store-csi-driver/v1.3.2/deploy/rbac-secretproviderclass.yaml
          #kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/secrets-store-csi-driver/v1.3.2/deploy/csidriver.yaml
          #kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/secrets-store-csi-driver/v1.3.2/deploy/secrets-store.csi.x-k8s.io_secretproviderclasses.yaml
          #kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/secrets-store-csi-driver/v1.3.2/deploy/secrets-store.csi.x-k8s.io_secretproviderclasspodstatuses.yaml
          #kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/secrets-store-csi-driver/v1.3.2/deploy/secrets-store-csi-driver.yaml
          #kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/secrets-store-csi-driver/v1.3.2/deploy/rbac-secretprovidersyncing.yaml
          #kubectl apply -f https://raw.githubusercontent.com/aws/secrets-store-csi-driver-provider-aws/main/deployment/aws-provider-installer.yaml
          
          kubectl apply -f https://raw.githubusercontent.com/aws/secrets-store-csi-driver-provider-aws/main/deployment/aws-provider-installer.yaml
          
          kustomize build kubeflow-manifests/awsconfigs/common/aws-secrets-manager | kubectl apply -f -
      - name: install istio
        run: |
          kustomize build upstream/common/istio-1-16/istio-crds/base | kubectl apply -f -
          kustomize build upstream/common/istio-1-16/istio-namespace/base | kubectl apply -f -
          kustomize build upstream/common/istio-1-16/istio-install/base | kubectl apply -f -
      - name: deploy Admission Webhook (cert-manager)
        run: |
          kustomize build upstream/apps/admission-webhook/upstream/overlays/cert-manager | kubectl apply -f -
      - name: deploy NGINX ingress controller
        run: |
          kubectl apply -f main/config/nginx-ingress-controller/deploy_nodeport.yaml
          
          #cp main/config/nginx-ingress-controller/eks.yaml forgeops/cluster/addons/nginx-ingress-controller/eks.yaml
          #cd forgeops/bin
          #./ingress-controller-deploy.sh --eks
      - name: deploy snapshot-controller
        run: |
          helm repo add piraeus-charts https://piraeus.io/helm-charts/
          helm install snapshot-controller piraeus-charts/snapshot-controller
          
