apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    # haproxy.router.openshift.io/cookie_name: route
    cert-manager.io/cluster-issuer: $(CERT_ISSUER)
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/session-cookie-hash: sha1
    nginx.ingress.kubernetes.io/session-cookie-name: route
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    # CORS is now set in the AM and IDM configurations
    nginx.ingress.kubernetes.io/enable-cors: "false"
    nginx.ingress.kubernetes.io/body-size: "64m"
    nginx.ingress.kubernetes.io/send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-body-size: "64m"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "16k"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-ForgeRock-TransactionId $req_id;
      proxy_set_header X-ForgeRock-TransactionId $req_id;
  name: forgerock
spec:
  ingressClassName: "nginx"
  rules:
  - host: $(FQDN)
    http:
      paths:
      - backend:
          service:
            name: am
            port:
              number: 80
        path: /am
        pathType: Prefix

      - backend:
          service:
            name: am-client
            port:
              number: 80
        path: /am-client
        pathType: Prefix

      - backend:
          service:
            name: idm
            port:
              number: 80
        path: /openidm
        pathType: Prefix

      - backend:
          service:
            name: idm
            port:
              number: 80
        path: /upload
        pathType: Prefix

      - backend:
          service:
            name: idm
            port:
              number: 80
        path: /export
        pathType: Prefix

      - backend:
          service:
            name: idm
            port:
              number: 80
        path: /admin
        pathType: Prefix

      - backend:
          service:
            name: idm
            port:
              number: 80
        path: /openicf
        pathType: Prefix

      - backend:
          service:
            name: end-user-ui
            port:
              number: 8080
        path: /enduser
        pathType: Prefix

      - backend:
          service:
            name: admin-ui
            port:
              number: 8080
        path: /platform
        pathType: Prefix

      - backend:
          service:
            name: login-ui
            port:
              number: 8080
        path: /am/XUI
        pathType: Prefix

      - backend:
          service:
            name: ig
            port:
              number: 8080
        path: /ig
        pathType: Prefix

  tls:
  - hosts:
    - $(FQDN)
    secretName: sslcert
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ig
  annotations:
    haproxy-ingress.github.io/ssl-redirect: "false"
    haproxy-ingress.github.io/force-ssl-redirect: "false"
    haproxy-ingress.github.io/rewrite-target: "/$2"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    nginx.ingress.kubernetes.io/rewrite-target: "/$2"
    cert-manager.io/cluster-issuer: $(CERT_ISSUER)

spec:
  ingressClassName: "nginx"
  tls:
  - hosts:
    - $(FQDN)
    secretName: sslcert
  rules:
  - host: $(FQDN)
    http:
      paths:
      - backend:
          service:
            name: ig
            port:
              number: 8080
        path: /ig(/|$)(.*)
        pathType: Prefix